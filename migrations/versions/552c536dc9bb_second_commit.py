"""Second commit

Revision ID: 552c536dc9bb
Revises: 
Create Date: 2025-03-23 20:56:41.674728

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '552c536dc9bb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Authors',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('author_lastName', sa.String(), nullable=False),
    sa.Column('author_firstName', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Genres',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('genre_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('createAt', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Book',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author', sa.BigInteger(), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=False),
    sa.Column('genre', sa.BigInteger(), nullable=False),
    sa.Column('publisher', sa.String(), nullable=False),
    sa.Column('published_years', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['author'], ['Authors.id'], ),
    sa.ForeignKeyConstraint(['genre'], ['Genres.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Book_author'), 'Book', ['author'], unique=False)
    op.create_index(op.f('ix_Book_genre'), 'Book', ['genre'], unique=False)
    op.create_index(op.f('ix_Book_isbn'), 'Book', ['isbn'], unique=False)
    op.create_index(op.f('ix_Book_language'), 'Book', ['language'], unique=False)
    op.create_index(op.f('ix_Book_pages'), 'Book', ['pages'], unique=False)
    op.create_index(op.f('ix_Book_published_years'), 'Book', ['published_years'], unique=False)
    op.create_index(op.f('ix_Book_publisher'), 'Book', ['publisher'], unique=False)
    op.create_index(op.f('ix_Book_title'), 'Book', ['title'], unique=False)
    op.create_table('UserBooksMerge',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('book_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['Book.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UserBooksMerge')
    op.drop_index(op.f('ix_Book_title'), table_name='Book')
    op.drop_index(op.f('ix_Book_publisher'), table_name='Book')
    op.drop_index(op.f('ix_Book_published_years'), table_name='Book')
    op.drop_index(op.f('ix_Book_pages'), table_name='Book')
    op.drop_index(op.f('ix_Book_language'), table_name='Book')
    op.drop_index(op.f('ix_Book_isbn'), table_name='Book')
    op.drop_index(op.f('ix_Book_genre'), table_name='Book')
    op.drop_index(op.f('ix_Book_author'), table_name='Book')
    op.drop_table('Book')
    op.drop_table('User')
    op.drop_table('Genres')
    op.drop_table('Authors')
    # ### end Alembic commands ###
